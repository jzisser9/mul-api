# syntax=docker/dockerfile:1

# This Dockerfile is optimized for production deployments.
# It uses multi-stage builds to reduce image size and improve security.

FROM ruby:3.1.2-slim as base

# Install system dependencies
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
      build-essential \
      curl \
      git \
      libpq-dev \
      nodejs \
      postgresql-client && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Set production environment
ENV RAILS_ENV="production" \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development:test"

# Create app user
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash

# Set app directory
WORKDIR /app
RUN chown rails:rails /app

# Install gems
COPY --chown=rails:rails Gemfile Gemfile.lock ./
RUN bundle install && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git && \
    bundle exec bootsnap precompile --gemfile

# Copy application code
COPY --chown=rails:rails . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Copy entrypoint and make executable
COPY --chown=rails:rails docker-entrypoint.sh /usr/bin/
RUN chmod +x /usr/bin/docker-entrypoint.sh

# Switch to non-root user
USER rails:rails

# Expose port
EXPOSE 3001

# Set entrypoint
ENTRYPOINT ["/usr/bin/docker-entrypoint.sh"]

# Default command
CMD ["rails", "server", "-b", "0.0.0.0", "-p", "3001"]